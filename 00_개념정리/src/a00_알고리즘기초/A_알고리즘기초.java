package a00_알고리즘기초;

public class A_알고리즘기초 {

	/*
	 * 1. 구현
	 *  - 주어진 문제를 그대로 따라가며 각 내용에 맞는 코드 작성
	 * 
	 * 2. 완전탐색
	 *  - 발생가능한 모든 경우의 수를 확인하는 방법
	 *   . for와 if문 사용
	 *   . 재귀함수 사용
	 *    : 기저 사례 설정(재귀가 종료되는 조건)
	 *    : 재귀함수의 깊이가 너무 깊어지지 않도록 주의 => StackOverFlow 발생
	 *    : DFS, 백트래킹
	 * 
	 * 3. 탐욕
	 *  - 현시점에서 가장 적합하다고 생각되는 요소를 선택해 가는 알고리즘 기법
	 *  - 최적화 문제 해결
	 *  - 거스름돈 거슬러주기, MST
	 * 
	 * [시험범위]
	 *  - 자료구조: PQ, Tree, 구간트리
	 *  - 정렬: 정렬API, 합병(MERGE)정렬
	 *  - 그래프: BFS, DFS(단절선, 단절점), 최단거리(다익스트라, 벨만포드, 플로이드워셜),
	 *          유니온파인드, MST(크루스칼), LCA, 위상정렬 
	 *  - 수학: 순열, 조합, 유클리드호제법, 에라토스테네스의 체
	 *  - 기법: 이진탐색, 파라메트릭 탐색, 해싱
	 *  - 동적계획법: 기존 동일
	 *  - 기하: 제외
	 *  - 문자열: 제외
	 *   
	 */
}
