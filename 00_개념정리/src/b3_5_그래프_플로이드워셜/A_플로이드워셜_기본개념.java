package b3_5_그래프_플로이드워셜;

public class A_플로이드워셜_기본개념 {
	/*
	 * [플로이드워셜(Floyd-Warshall)]
	 *  - 다익스트라와 벨만포드는 시작점으로부터 나머지 모든 정점까지의 최단거리 
	 *  - 플로이드워셜은 모든 정점사이의 최단거리
	 *  - 시간복잡도: O(V^3) (V: 정점의 수)
	 *  - 절차
	 *   1. 그래프를 인접행렬 형태로 저장
	 *      만약 두 정점 사이에 두 개 이상의 경로를 가지는 경우는 최소값만 저장
	 *   2. 두 정점 사에에 간선이 없다면 무한대로 설정
	 *   3. 특정 정점을 경유해서 가는 경로 의 길이와 기존 저장해 두었던 정점 사이의 거리를 비교하여 더 짧은 값으로 갱신
	 *   4. 3에서 사용한 방법을 1번 정정부터 마지막 정점까지 모두 경유지로 설정한 후 값 갱신
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
