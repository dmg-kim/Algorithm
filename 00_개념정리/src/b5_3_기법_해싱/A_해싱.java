package b5_3_기법_해싱;

public class A_해싱 {

	/*
	 * 1. 구현
	 *  - 주어진 문제를 그대로 따라가며 각 내용에 맞는 코드 작성
	 * 
	 * 2. 완전탐색
	 *  - 발생가능한 모든 경우의 수를 확인하는 방법
	 *   . for와 if문 사용
	 *   . 재귀함수 사용
	 *    : 기저 사례 설정(재귀가 종료되는 조건)
	 *    : 재귀함수의 깊이가 너무 깊어지지 않도록 주의 => StackOverFlow 발생
	 *    : DFS, 백트래킹
	 * 
	 * 3. 탐욕
	 *  - 현시점에서 가장 적합하다고 생각되는 요소를 선택해 가는 알고리즘 기법
	 *  - 최적화 문제 해결
	 *  - 거스름돈 거슬러주기, MST
	 *    
	 */
}
